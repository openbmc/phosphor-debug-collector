{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a0346eb7_64c2fcc1",
        "filename": "bmcstored_dump_entry.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-16T22:13:27Z",
      "side": 1,
      "message": "dbus is not thread-safe.  You can\u0027t set a property (which has the side-effect of raising a PropertiesChanged signal) from anything except the main thread.\n\nThis is a sd_bus limitation, not just sdbusplus.",
      "revId": "851256158be9055741c92b9aba0336567cf76e2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b23bd94a_6591cff3",
        "filename": "bmcstored_dump_entry.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-02-17T04:17:59Z",
      "side": 1,
      "message": "This will be a problem, need some callback to main thread after the completion of the offload",
      "parentUuid": "a0346eb7_64c2fcc1",
      "revId": "851256158be9055741c92b9aba0336567cf76e2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53e21b12_dae6ec8c",
        "filename": "bmcstored_dump_entry.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-17T04:36:21Z",
      "side": 1,
      "message": "Yes.  You’ll need to trigger some kind of sd_event back to the main thread likely.",
      "parentUuid": "b23bd94a_6591cff3",
      "revId": "851256158be9055741c92b9aba0336567cf76e2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "653ebdfe_c85b9007",
        "filename": "bmcstored_dump_entry.cpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-16T22:13:27Z",
      "side": 1,
      "message": "The \u0027asyncOffloadThread.valid()\u0027 will be valid until someone calls \u0027get\u0027 on the future after it has completed.  I don\u0027t see any path where that happens, so how does the future become invalid after completion?  Doesn\u0027t this mean that you can only initiate offload a single time per entry?\n\nhttps://en.cppreference.com/w/cpp/thread/future/valid",
      "revId": "851256158be9055741c92b9aba0336567cf76e2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cf288f8_14c40495",
        "filename": "bmcstored_dump_entry.cpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2022-02-17T04:17:59Z",
      "side": 1,
      "message": "Yes future will become invalid after completion because there is one socket file used by BMC web for each dump, so we cannot have simultaneous offloads of same dump",
      "parentUuid": "653ebdfe_c85b9007",
      "revId": "851256158be9055741c92b9aba0336567cf76e2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d31faa58_9b85a071",
        "filename": "bmcstored_dump_entry.cpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-17T04:36:21Z",
      "side": 1,
      "message": "Can you elaborate how it becomes invalid?  Meaning, what code causes it?  I don’t see anything in place now.",
      "parentUuid": "7cf288f8_14c40495",
      "revId": "851256158be9055741c92b9aba0336567cf76e2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}