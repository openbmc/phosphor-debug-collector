{
  "comments": [
    {
      "key": {
        "uuid": "723e4877_c2547fd4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-12T05:33:35Z",
      "side": 1,
      "message": "Can you add new line ?",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46e6a5f8_13a3cd7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 123,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-12T05:33:35Z",
      "side": 1,
      "message": "Can you add new line?",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "318346ba_dd49b09d",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-12T05:33:35Z",
      "side": 1,
      "message": "Why need to call base EntryIfaces constructor explicitly? since, In LN:61, the base entry constructor is called and it calling Base dump::EntryIfaces right?",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5297bfce_39ba3464",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T06:30:37Z",
      "side": 1,
      "message": "This is no more needed since virtual is removed",
      "parentUuid": "318346ba_dd49b09d",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba09de7f_d2ba48d7",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-02-12T02:46:33Z",
      "side": 1,
      "message": "is this really needed?",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "badbdcab_325e5ea0",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T05:06:07Z",
      "side": 1,
      "message": "Will remove and test",
      "parentUuid": "ba09de7f_d2ba48d7",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21f5a9f8_ef9ed99c",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-02-12T05:14:34Z",
      "side": 1,
      "message": "Here , trying to emit objects for derived one BMC right?  Looks like you are trying to get base object emit signal on this . My understanding you are trying to solve the issue with missing member update info. with base class signal emission. The reason could be  the order of object ceration.\nArticle related to this http://www.cs.technion.ac.il/users/yechiel/c++-faq/using-this-in-ctors.html\n\nHow the end user is warching the signal ,its is based type  specific dump object right? then we just need to emit signal on the sepcific typoe objecvt . if not they need to change .",
      "parentUuid": "badbdcab_325e5ea0",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69cef926_df05b853",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-12T05:33:35Z",
      "side": 1,
      "message": "Looks you have different EntryIfaces (for BMC, System, Resource and Base Entry) if so, EntryIfaces naming is confusing while looking object creation order, can you change it ?",
      "parentUuid": "ba09de7f_d2ba48d7",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "988d8d62_9c8254a6",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T05:40:15Z",
      "side": 1,
      "message": "this was added because emit signal was ambigous",
      "parentUuid": "21f5a9f8_ef9ed99c",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6b2103a_11cd4fc3",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T06:16:42Z",
      "side": 1,
      "message": "@ramesh all in different namespaces right?",
      "parentUuid": "988d8d62_9c8254a6",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09865a3e_0f64451b",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-12T06:59:23Z",
      "side": 1,
      "message": "Yes, it is in different namespace, but those EntryIfaces emit_object_added() function scope applicable to derived class as well and implicitly it picking near scope function, So, explicit namespace is good or rename it",
      "parentUuid": "f6b2103a_11cd4fc3",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67919be7_9aaadc2e",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T07:09:14Z",
      "side": 1,
      "message": "You mean phosphor::dump::bmc::EntryIfaces? Since it in this class i am not sure how that is confusing.. but I can add that",
      "parentUuid": "09865a3e_0f64451b",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b7d8d73_d5ecf0fe",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-12T07:30:38Z",
      "side": 1,
      "message": "```\nusing EntryIfaces \u003d sdbusplus::server::object::object\u003c\n     sdbusplus::xyz::openbmc_project::Common::server::Progress,\n     sdbusplus::xyz::openbmc_project::Dump::server::Entry,\n     sdbusplus::xyz::openbmc_project::Object::server::Delete,\n     sdbusplus::xyz::openbmc_project::Time::server::EpochTime\u003e;\n\nclass Entry : public EntryIfaces {};\n\nusing EntryIfaces \u003d sdbusplus::server::object::object\u003c\n     sdbusplus::xyz::openbmc_project::Dump::Entry::server::BMC\u003e;\n\nclass Entry : virtual public EntryIfaces, virtual public phosphor::dump::Entry {}\n```\n\n- BMC entry class has visibility to call emit_object_added() for bmc entry and as well base Entry.\n- Currently it calling BMC EntryIfaces::emit_object_added() based on near scope (it will check in derived class scope first and then it will look base class scope based on class inheritence order) and this is implicit call and while looking code we are losing readability for this kind of implicit call. So, suggesting will make it as explicitly ?",
      "parentUuid": "67919be7_9aaadc2e",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ad85ee3_45bd7750",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T07:39:59Z",
      "side": 1,
      "message": "My question was since it is calling on \u0027this\u0027 it was implicit that it is calling on the derived one.. anyway added that explicitly for readability.",
      "parentUuid": "1b7d8d73_d5ecf0fe",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 27
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8570ab5f_69678225",
        "filename": "dump-extensions/openpower-dumps/resource_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-02-12T02:46:33Z",
      "side": 1,
      "message": "do you need to call both explicitly?",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73ae943d_8c767b33",
        "filename": "dump-extensions/openpower-dumps/resource_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-12T03:59:53Z",
      "side": 1,
      "message": "Do we need to call emit_object_added, I assume it is automatically taken care",
      "parentUuid": "8570ab5f_69678225",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "920fac24_a3046104",
        "filename": "dump-extensions/openpower-dumps/resource_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T05:06:07Z",
      "side": 1,
      "message": "That is added because of virtual inheritance, removing\nEmit signal is needed since the signal is differed right?",
      "parentUuid": "73ae943d_8c767b33",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bc5c342_996f6a72",
        "filename": "dump-extensions/openpower-dumps/resource_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-12T05:33:35Z",
      "side": 1,
      "message": "Devender: They are making `deferSignal` as true (LN60 in this file) which is parameter to sdbusplus::server::object::object constructor. So, Dbus object implementer have custom property (In this case, srcID, vsp and pwd) that need to be initialise before sending interface added signal.\n\nDhruv but, do we need to emit signal for base entry and bmc entry ? (same as Deepak point)",
      "parentUuid": "73ae943d_8c767b33",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a314b9a3_720b162c",
        "filename": "dump-extensions/openpower-dumps/resource_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T05:40:15Z",
      "side": 1,
      "message": "Only one is needed",
      "parentUuid": "920fac24_a3046104",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "418792cb_36dd2aaf",
        "filename": "dump-extensions/openpower-dumps/resource_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-12T03:59:53Z",
      "side": 1,
      "message": "override?",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6151f1bf_56c5c9be",
        "filename": "dump-extensions/openpower-dumps/resource_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T05:06:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "418792cb_36dd2aaf",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb60fcb_6e8ac275",
        "filename": "dump-extensions/openpower-dumps/system_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-12T03:59:53Z",
      "side": 1,
      "message": "this is automatically done , please check if this is really needed.",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "609ef300_d6b2cfbd",
        "filename": "dump-extensions/openpower-dumps/system_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T06:17:25Z",
      "side": 1,
      "message": "needed",
      "parentUuid": "bcb60fcb_6e8ac275",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08b40088_8db900e8",
        "filename": "dump-extensions/openpower-dumps/system_dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-02-12T10:57:35Z",
      "side": 1,
      "message": "Devender, line 55 disables this.",
      "parentUuid": "609ef300_d6b2cfbd",
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fa77539_92fb6bb1",
        "filename": "dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-12T03:59:53Z",
      "side": 1,
      "message": "need to create issue and add no here",
      "range": {
        "startLine": 20,
        "startChar": 3,
        "endLine": 20,
        "endChar": 7
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0da96edf_e70f7cfe",
        "filename": "dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T05:06:07Z",
      "side": 1,
      "message": "It is there below",
      "parentUuid": "1fa77539_92fb6bb1",
      "range": {
        "startLine": 20,
        "startChar": 3,
        "endLine": 20,
        "endChar": 7
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0300a811_4b09e30e",
        "filename": "dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-02-12T02:46:33Z",
      "side": 1,
      "message": "not needed? this is not multiple inheritance.",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 22
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b7bd942_0a523541",
        "filename": "dump_entry.hpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-12T05:06:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0300a811_4b09e30e",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 22
      },
      "revId": "92e478d74d91c3fdbb6630b96ec57b2f5f653346",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}