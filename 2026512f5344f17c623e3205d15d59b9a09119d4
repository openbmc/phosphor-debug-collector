{
  "comments": [
    {
      "key": {
        "uuid": "b8dd190a_a6a3101f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "Please elaborate your problem statement like\n- Why you are refactoring ?\n- What is blocking to enable local dump in current code? \n- What is local dump?\n- How refactored code won\u0027t affect existing bmc dump functionality.\nThose pointes will be good to review by understanding problems.",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d16bbb5_68ca4080",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "Is it covered negative test cases if so, please elaborate TCs and add more TCs.\nSince, It refactor patch set and we don\u0027t UT support right now for all code so, adding more TCs will help to see if we missed anything - May be maintainer know more functionality and They can help us if we missed anything to test.",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb2797ac_8d82330b",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 17
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e60630b4_942b3cea",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb2797ac_8d82330b",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 17
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d32385ea_3c478189",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:59:04Z",
      "side": 1,
      "message": "inheritance is not good here rather use composition, create a member variable of it.",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 57
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4417c276_d7356c0f",
        "filename": "bmc_dump_entry.hpp",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Why you think inheritance is not good? it is inheriting the local dump to bmc dump",
      "parentUuid": "d32385ea_3c478189",
      "range": {
        "startLine": 29,
        "startChar": 28,
        "endLine": 29,
        "endChar": 57
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b52ef3cc_fb85d787",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "remove do check by removing the headers and compile",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 19
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99ba370a_64c6f165",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b52ef3cc_fb85d787",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 19
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c25dd639_cbad8e5b",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "how is this populated is it a TODO?",
      "range": {
        "startLine": 26,
        "startChar": 34,
        "endLine": 26,
        "endChar": 41
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "955c261e_e0e281d9",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "- Why is it in global scope ?\n- Whether it is limited scope with file unit ? If use static.\n- Same as Devender: How it is get initialise. if it different commit set then push this variable related changes into that commit not here.",
      "parentUuid": "c25dd639_cbad8e5b",
      "range": {
        "startLine": 26,
        "startChar": 34,
        "endLine": 26,
        "endChar": 41
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d690fa5_e9bfa357",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "the below code can as well go into the create method, as I do not see this method being used else where",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 72
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e7d24f6_2c4d07de",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "5d690fa5_e9bfa357",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 72
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ed6d3ee_e20d14e1",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "this will commit the error and will continue to line 42 is that your expectation?",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 34
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "087515d4_a0ee8941",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "5ed6d3ee_e20d14e1",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 34
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d99214f_22928e78",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "I didnt change this function, need to look :)",
      "parentUuid": "087515d4_a0ee8941",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 34
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71e1e54b_b2b3fd50",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "Why not use mngr -\u003e bmcMgr?",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e54bdec6_717e23f0",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "Derived* pDerived \u003d dynamic_cast\u003cDerived*\u003e(pBase);\nif(pDerived) // always test  \n{\n}\n\nyou should be using dynamic_cast and check return value, here we are doing assumption and reinterpreting which is dangerous.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 77
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72d9696b_3d436b92",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e54bdec6_717e23f0",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 77
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f6c7a3d_d47e29dd",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72d9696b_3d436b92",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 77
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b39ae454_b98664e3",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "please add error message rather than error code else whoever looking error code they need to get know respective error message.",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b93ddd9_78c3a0d3",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b39ae454_b98664e3",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df5b4e13_aa22aafc",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "avoid InternalFailure you can create std::runtime exception with the error message, which the caller can catch using \ncatch(std::exception\u0026 ex)\n{\n   print ex.what();\n   elog\u003cInternalFailure);\n}\n\nthis way the caller can print the error message where it is invoked, assuming if there are multiple places this captureDump method is invoked we will have the message in those caller methods.",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 32
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f960cf7e_f270fa8f",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "again this is exiting code, I can change.",
      "parentUuid": "df5b4e13_aa22aafc",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 32
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc427a8d_f5ff2e02",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "https://www.freedesktop.org/software/systemd/man/sd_event_add_child.html\n\nIf the handler parameter to sd_event_add_child() is NULL, and the event source fires, this will be considered a request to exit the event loop. In this case, the userdata parameter, cast to an integer, is passed as the exit code parameter to sd_event_exit(3).\n\nno need to define callback method if no special handling is done, worst case you can pass a lambda?",
      "range": {
        "startLine": 71,
        "startChar": 57,
        "endLine": 71,
        "endChar": 65
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35448b32_adc9ec34",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "bc427a8d_f5ff2e02",
      "range": {
        "startLine": 71,
        "startChar": 57,
        "endLine": 71,
        "endChar": 65
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0361055b_2684f484",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "this return value is not used by the caller, so is it required",
      "range": {
        "startLine": 86,
        "startChar": 3,
        "endLine": 86,
        "endChar": 28
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9336e32_7a82d46d",
        "filename": "dump_internal.cpp",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "yes for other callers",
      "parentUuid": "0361055b_2684f484",
      "range": {
        "startLine": 86,
        "startChar": 3,
        "endLine": 86,
        "endChar": 28
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91b22300_adccab36",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 25,
        "startChar": 35,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "319e5edd_c3b3fdf3",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91b22300_adccab36",
      "range": {
        "startLine": 25,
        "startChar": 35,
        "endLine": 25,
        "endChar": 37
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53ca82f_52802499",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "Do you restricted other constructor as like other class ?",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "148d93d6_7d1e077a",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b53ca82f_52802499",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a513ef19_0db54635",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "Looks you changed arguments, please correct it with purpose of this argument.",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f37955c_ff10fa55",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a513ef19_0db54635",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c1a72dc_711f8c2f",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "I guess these can go into private section",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 82,
        "endChar": 44
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03b18c32_3e6a7fd9",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "is the code added in future commits? we can pass NULL in the caller if no specific handling is done. if this method is removed need to remove corresponding headers too",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 17
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14427d14_1d0419fe",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "No implementation then why you are returning 0 instead -1 as per you return code doc.",
      "parentUuid": "03b18c32_3e6a7fd9",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 17
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71239a5c_e2741828",
        "filename": "dump_internal.hpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "this is an existing function",
      "parentUuid": "14427d14_1d0419fe",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 17
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36daeb46_50dc2704",
        "filename": "dump_manager.hpp",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "don\u0027t we need to override this method as we are inheriting from DeleteAll\nvirtual void deleteAll() \u003d 0;",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae9ac7b2_cb77ca21",
        "filename": "dump_manager.hpp",
        "patchSetId": 6
      },
      "lineNbr": 51,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:59:04Z",
      "side": 1,
      "message": "ignore it is there in protected",
      "parentUuid": "36daeb46_50dc2704",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94347c1c_ce3d8710",
        "filename": "dump_manager.hpp",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "Can you as const function ? I guess caller can not change the value",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dcde12b_2797e537",
        "filename": "dump_manager.hpp",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94347c1c_ce3d8710",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2b1df30_71ec900f",
        "filename": "dump_manager.hpp",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "Same as above comment",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c672469_7ad25fe6",
        "filename": "dump_manager.hpp",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2b1df30_71ec900f",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04dac8bf_a26eb4fb",
        "filename": "dump_manager_bmc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "who is going to call Dump::internal::Manager-\u003ecreate method, if no one else is calling better change Internal::Manager to not to inherit from Create interface. Let it be like an helper class",
      "range": {
        "startLine": 36,
        "startChar": 30,
        "endLine": 36,
        "endChar": 41
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36ab9c9f_67a99c7d",
        "filename": "dump_manager_bmc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "watch will call this method",
      "parentUuid": "04dac8bf_a26eb4fb",
      "range": {
        "startLine": 36,
        "startChar": 30,
        "endLine": 36,
        "endChar": 41
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc5530b_673358db",
        "filename": "dump_manager_bmc.hpp",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:46:24Z",
      "side": 1,
      "message": "thie clas is not implementing the Create interface so not required.",
      "range": {
        "startLine": 33,
        "startChar": 24,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9abbc22e_fabd9971",
        "filename": "dump_manager_bmc.hpp",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fc5530b_673358db",
      "range": {
        "startLine": 33,
        "startChar": 24,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a86b9c7_926f66e7",
        "filename": "dump_manager_bmc.hpp",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "don\u0027t think this is required as we are just accessing static variable",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 51
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13c52bb7_ce11926e",
        "filename": "dump_manager_bmc.hpp",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a86b9c7_926f66e7",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 51
      },
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7455cac6_a1389123",
        "filename": "dump_manager_bmc.hpp",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "static const std::map\u003cType, std::string\u003e TypeMap \u003d {\n    {Type::ApplicationCored, \"core\"},\n    {Type::UserRequested, \"user\"},\n    {Type::InternalFailure, \"elog\"},\n    {Type::Checkstop, \"checkstop\"}};\n\nbetter to define TypeMap like above and let the phosphor::bmc::dump::Manager have the phosphod::dump::internal::manager have the member object of it, use it like an helper class.",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2ac20b7_7ca80c39",
        "filename": "dump_manager_bmc.hpp",
        "patchSetId": 6
      },
      "lineNbr": 67,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "I will change the way its written",
      "parentUuid": "7455cac6_a1389123",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b74c0751_d6eeccc4",
        "filename": "dump_manager_main.cpp",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2021-02-24T09:42:15Z",
      "side": 1,
      "message": "as phosphor::dump::internal::manager is very specific to phosphor::dump::bmc::Manager we can choose to create the internal::manager object as part of the constructor of bmc::manager ( composition) unless phosphor::dump::internal::manager is used for other dumps too.",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d70fdc1_63a94949",
        "filename": "dump_manager_main.cpp",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "yes it will be used for all locally stored dumps",
      "parentUuid": "b74c0751_d6eeccc4",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "224c0019_733c9f9a",
        "filename": "local_dump_entry.hpp",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-02-24T11:53:37Z",
      "side": 1,
      "message": "Please add what are dbus api this class is implemented \n- Delete\n- Offload\n\nAnything else ?",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46192d28_78f2d56e",
        "filename": "local_dump_entry.hpp",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2021-02-25T05:55:22Z",
      "side": 1,
      "message": "this implements only entry",
      "parentUuid": "224c0019_733c9f9a",
      "revId": "2026512f5344f17c623e3205d15d59b9a09119d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}