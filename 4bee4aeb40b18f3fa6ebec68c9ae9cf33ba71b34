{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f772e787_8910d618",
        "filename": "dump_utils.hpp",
        "patchSetId": 52
      },
      "lineNbr": 157,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2023-06-23T14:45:36Z",
      "side": 1,
      "message": "c++ not happy with this change:\n\n../dump_utils.hpp:157:27:   required from ‘T phosphor::dump::getStateValue(const std::string\u0026, const std::string\u0026, const std::string\u0026) [with T \u003d sdbusplus::common::xyz::openbmc_project::state::Host::HostState; std::string \u003d std::__cxx11::basic_string\u003cchar\u003e]’\n../dump_utils.hpp:190:36:   required from here\n/usr/include/c++/13/variant:1124:42: error: static assertion failed: T must occur exactly once in alternatives\n 1124 |       static_assert(__detail::__variant::__exactly_once\u003c_Tp, _Types...\u003e,\n      |                     ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
      "revId": "4bee4aeb40b18f3fa6ebec68c9ae9cf33ba71b34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f79dcf4b_b97bb87e",
        "filename": "dump_utils.hpp",
        "patchSetId": 52
      },
      "lineNbr": 157,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-06-23T15:01:07Z",
      "side": 1,
      "message": "ya testing different options",
      "parentUuid": "f772e787_8910d618",
      "revId": "4bee4aeb40b18f3fa6ebec68c9ae9cf33ba71b34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f99aa9d4_532bb602",
        "filename": "dump_utils.hpp",
        "patchSetId": 52
      },
      "lineNbr": 157,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-06-23T23:13:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f79dcf4b_b97bb87e",
      "revId": "4bee4aeb40b18f3fa6ebec68c9ae9cf33ba71b34",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}